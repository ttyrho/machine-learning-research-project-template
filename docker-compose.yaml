# Copyright (C) 2025 Cesar Perez

name: ${PROJECT_NAME}

services:

  traefik:
    restart: unless-stopped
    image: traefik:${TRAEFIK_VERSION}
    command:
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --log.level=${TRAEFIK_LOG_LEVEL}
      - --accesslog=${TRAEFIK_ENABLE_ACCESSLOG}
      - --accesslog.addinternals
      - --ping=true
      - --api.insecure=true
    labels:
      - traefik.enable=true
      - traefik.http.routers.proxy.rule=Host(`${TRAEFIK_HOST}`)
      - traefik.http.routers.proxy.service=proxy
      - traefik.http.services.proxy.loadbalancer.server.port=8080
    volumes:
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
        read_only: true
    ports:
      - ${TRAEFIK_SERVICE_PORT}:80
    expose:
      - 8080
    healthcheck:
      test: "traefik healthcheck --ping"
      start_period: 5s
      interval: 5s
      timeout: 10s
      retries: 3

  jupyter:
    restart: unless-stopped
    image: quay.io/jupyter/${JUPYTER_IMAGE}-notebook:${JUPYTER_VERSION}
    labels:
      - traefik.enable=true
      - traefik.http.routers.jupyter.rule=Host(`${JUPYTER_NOTEBOOK_HOST}`)
      - traefik.http.routers.jupyter.service=jupyter
      - traefik.http.services.jupyter.loadbalancer.server.port=8888
    environment:
      DOCKER_STACKS_JUPYTER_CMD: ${JUPYTER_NOTEBOOK_FLAVOR:-lab}
      JUPYTER_TOKEN: ${JUPYTER_NOTEBOOK_TOKEN}
    volumes:
      - type: bind
        source: ./work
        target: /home/jovyan/work
    expose:
      - 8888
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: ["gpu"]
              count: all

  mlflow:
    restart: unless-stopped
    image: ghcr.io/mlflow/mlflow:${MLFLOW_VERSION}
    command:
      - mlflow
      - server
      - --host=0.0.0.0
    labels:
      - traefik.enable=true
      - traefik.http.routers.mlflow.rule=Host(`${MLFLOW_HOST}`)
      - traefik.http.routers.mlflow.service=mlflow
      - traefik.http.services.mlflow.loadbalancer.server.port=5000
    volumes:
      - type: bind
        source: ./runs
        target: /mlruns
    expose:
      - 5000
